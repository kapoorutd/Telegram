package org.telegram.tracker;

import android.content.Context;

import com.google.android.gms.analytics.GoogleAnalytics;
import com.google.android.gms.analytics.Tracker;

import org.telegram.messenger.R;

import java.util.HashMap;
import java.util.Map;

/**
 * A collection of Google Analytics trackers. Fetch the tracker you need using
 * {@code AnalyticsTrackers.getInstance().get(...)}
 * <p/>
 * This code was generated by Android Studio but can be safely modified by
 * hand at this point.
 * <p/>
 * TODO: Call {@link #initialize(Context)} from an entry point in your app
 * before using this!
 */
public final class AnalyticsTrackers {

    public static final String CHAT_ACTIVITY = "Chat Screen";
    public static final String CHATPROFILE = "Chat profile Screen";
    public static final String CHANGENAMEACTIVITY = "Change name screen";
    public static final String ADD_CONTACT= "Add contact Screen";
    public static final String CONTACT  = "Contact Screen";
    public static final String SELECT_CUNTRY = "Country select Screen";
    public static final String SELECT_DOCUMENT = "Select Document Screen";
    public static final String CREATE_GROUP = "Creat Group Screen";
    public static final String IDENTICONACTIVITY  = "Identicon Activity Screen";
    public static final String INTRO_ACTIVITY = "Intro Activity Screen";
    public static final String SELECT_LANGUAGE_ACTIVITY = "Select Language SCREEN";
    public static final String LAST_SCREEN_ACTIVITY = "Last Activity Screen";
    public static final String LAST_SCREEN_USER_ACTIVITY = "Last seen user Activity Screen";
    public static final String LAUNCH_ACTIVITY = "Launch Screen";
    public static final String LOCATION_ACTIVITY = "Location Screen";
    public static final String LOGIN = "LOGIN Screen";
    public static final String MEDIA_ACTIVITY = "Media Screen";
    public static final String MANAGESPACE = "ManageSpace Screen";
    public static final String MESSAGE_ACTIVITY = "Message Screen";
    public static final String VIDEO_PICKER = "Video picker Screen";
    public static final String VIDEO_EDITOR = "Video editor Screen";
    public static final String USER_PROFILE = "User profile Screen";
    public static final String SETTING_WRAPPER = "Setting Wallpaper Screen";
    public static final String CHANGE_USER_NAME = "Change userScreen";
    public static final String CHANGESETTING = "Change setting Screen";
    public static final String BLOCKED_USER= "Blocked User Screen";
    public static final String SETTING_SCREEN = "Setting Screen";
    public static final String PRIVACT_SETTING = "Privacy setting Screen";
    public static final String POPUP_NOTIFICATION = "PopUp Notification Screen";
    public static final String CHAT_SETTING = "Chat setting Screen";
    public static final String SETTING_NOTIFICATION_AND_SOUND = "Notification and sound Screen";
    public static final String GROUP_CREATE_FINAL_ACTIVITY = "Group create final Screen";
    public static final String MEDIA_ATTACH_ACTIVITY = "Media attach Screen";
    public static final String OSMLOCATION = "OSM Location Screen";
    public static final String PHOTOCROP_SCREEN = "Photo Crop Screen";
    public static final String PHOTO_ALBUM_PICKER= "Photo Album picker Screen";
    public static final String PHOTO_PICK_SCREEN = "Photo PICK Screen";
    public static final String NOTIFICATION_SETTING = "Notification Setting Screen";
    public static final String PROFILE_NOTIFICATION = "Profile Notification Screen";
    /////
    public static final String AUDIO_SELECT = "Audio Select Screen";
    public static final String AUDIO_PLAYER = "Audio Player Screen";
    public static final String CACHECONTROL = "Cache control Screen";
    public static final String CHANGE_CHAT_NAME = "Change Chat Name Screen";
    public static final String CHANGE_PHONE = "Change Phone Screen";
    public static final String CHANGE_PHONE_HELP = "Change Phone Help Screen";
    public static final String CHANNEL_CREATE = "Channel Create Screen";
    public static final String CHANNEL_INTRO = "Channel Intro Screen";
    public static final String CHANNEL_EDIT = "Channel Edit Screen";
    public static final String CHANNEL_USER = "Channel user Screen";
    public static final String GROUP_INVITE = "Group Invite Screen";
    public static final String TWOSTEP_VARIFICATION = "Two step varification Screen";
    public static final String WALLPAPER_ACTIVITY = "Wallpaper Screen";
    public static final  String STICKERS_ACTIVITY = "Stickers Screen";
    public static final String ADMIN_ACTIVITY = "Set Admin Screen";
    public static final String SESSION_ACTIVITY ="Session Screen";
    public static final String PHOTOVIEWER = "PhotoViewer Screeen";
    public static final String PASSCODE = "Passcode Screeen";
    public static final String DIALOGACTIVITY = "Dialog Screen";
    public enum Target {
        APP,
        // Add more trackers here if you need, and update the code in #get(Target) below
    }

    private static AnalyticsTrackers sInstance;

    public static synchronized void initialize(Context context) {
        if (sInstance != null) {
            throw new IllegalStateException("Extra call to initialize analytics trackers");
        }

        sInstance = new AnalyticsTrackers(context);
    }

    public static synchronized AnalyticsTrackers getInstance() {
        if (sInstance == null) {
            throw new IllegalStateException("Call initialize() before getInstance()");
        }

        return sInstance;
    }

    private final Map<Target, Tracker> mTrackers = new HashMap<Target, Tracker>();
    private final Context mContext;

    /**
     * Don't instantiate directly - use {@link #getInstance()} instead.
     */
    private AnalyticsTrackers(Context context) {
        mContext = context.getApplicationContext();
    }

    public synchronized Tracker get(Target target) {
        if (!mTrackers.containsKey(target)) {
            Tracker tracker;
            switch (target) {
                case APP:
                    tracker = GoogleAnalytics.getInstance(mContext).newTracker(R.xml.app_tracker);
                    break;
                default:
                    throw new IllegalArgumentException("Unhandled analytics target " + target);
            }
            mTrackers.put(target, tracker);
        }

        return mTrackers.get(target);
    }
}

